{
  "openapi": "3.0.1",
  "info": {
    "title": "Data API builder - REST Endpoint",
    "version": "1.2.10"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "paths": {
    "/rooms/room_id/{room_id}": {
      "get": {
        "tags": [
          "rooms"
        ],
        "description": "Returns an entity.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/rooms"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "rooms"
        ],
        "description": "Replace or create entity.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/rooms_NoPK"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/rooms"
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/rooms"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "rooms"
        ],
        "description": "Update or create entity.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/rooms_NoPK"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/rooms"
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/rooms"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "rooms"
        ],
        "description": "Delete entity.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "parameters": [
        {
          "name": "room_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "number"
          }
        }
      ]
    },
    "/rooms": {
      "get": {
        "tags": [
          "rooms"
        ],
        "description": "Returns entities.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/rooms"
                      }
                    },
                    "nextLink": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "rooms"
        ],
        "description": "Create entity.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/rooms_NoAutoPK"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/rooms"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/clients/client_mail/{client_mail}": {
      "get": {
        "tags": [
          "clients"
        ],
        "description": "Returns an entity.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/clients"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "clients"
        ],
        "description": "Replace or create entity.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/clients_NoPK"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/clients"
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/clients"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "clients"
        ],
        "description": "Update or create entity.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/clients_NoPK"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/clients"
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/clients"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "clients"
        ],
        "description": "Delete entity.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "parameters": [
        {
          "name": "client_mail",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/clients": {
      "get": {
        "tags": [
          "clients"
        ],
        "description": "Returns entities.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/clients"
                      }
                    },
                    "nextLink": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "clients"
        ],
        "description": "Create entity.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/clients"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/clients"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/reservations/reservation_id/{reservation_id}": {
      "get": {
        "tags": [
          "reservations"
        ],
        "description": "Returns an entity.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/reservations"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "reservations"
        ],
        "description": "Replace or create entity.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reservations_NoPK"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/reservations"
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/reservations"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "reservations"
        ],
        "description": "Update or create entity.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reservations_NoPK"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/reservations"
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/reservations"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "reservations"
        ],
        "description": "Delete entity.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "parameters": [
        {
          "name": "reservation_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "number"
          }
        }
      ]
    },
    "/reservations": {
      "get": {
        "tags": [
          "reservations"
        ],
        "description": "Returns entities.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/reservations"
                      }
                    },
                    "nextLink": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "reservations"
        ],
        "description": "Create entity.",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reservations_NoAutoPK"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/reservations"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "rooms": {
        "type": "object",
        "properties": {
          "room_id": {
            "type": "number",
            "format": ""
          },
          "room_name": {
            "type": "string",
            "format": ""
          }
        }
      },
      "rooms_NoAutoPK": {
        "type": "object",
        "properties": {
          "room_name": {
            "type": "string",
            "format": ""
          }
        }
      },
      "rooms_NoPK": {
        "type": "object",
        "properties": {
          "room_name": {
            "type": "string",
            "format": ""
          }
        }
      },
      "clients": {
        "type": "object",
        "properties": {
          "client_mail": {
            "type": "string",
            "format": ""
          },
          "client_name": {
            "type": "string",
            "format": ""
          }
        }
      },
      "clients_NoAutoPK": {
        "type": "object",
        "properties": {
          "client_mail": {
            "type": "string",
            "format": ""
          },
          "client_name": {
            "type": "string",
            "format": ""
          }
        }
      },
      "clients_NoPK": {
        "type": "object",
        "properties": {
          "client_name": {
            "type": "string",
            "format": ""
          }
        }
      },
      "reservations": {
        "type": "object",
        "properties": {
          "reservation_id": {
            "type": "number",
            "format": ""
          },
          "client_mail": {
            "type": "string",
            "format": ""
          },
          "room_id": {
            "type": "number",
            "format": ""
          },
          "reservation_date": {
            "type": "string",
            "format": ""
          },
          "reservation_hour": {
            "type": "number",
            "format": ""
          },
          "nb_hours": {
            "type": "number",
            "format": ""
          }
        }
      },
      "reservations_NoAutoPK": {
        "type": "object",
        "properties": {
          "client_mail": {
            "type": "string",
            "format": ""
          },
          "room_id": {
            "type": "number",
            "format": ""
          },
          "reservation_date": {
            "type": "string",
            "format": ""
          },
          "reservation_hour": {
            "type": "number",
            "format": ""
          },
          "nb_hours": {
            "type": "number",
            "format": ""
          }
        }
      },
      "reservations_NoPK": {
        "type": "object",
        "properties": {
          "client_mail": {
            "type": "string",
            "format": ""
          },
          "room_id": {
            "type": "number",
            "format": ""
          },
          "reservation_date": {
            "type": "string",
            "format": ""
          },
          "reservation_hour": {
            "type": "number",
            "format": ""
          },
          "nb_hours": {
            "type": "number",
            "format": ""
          }
        }
      }
    }
  }
}